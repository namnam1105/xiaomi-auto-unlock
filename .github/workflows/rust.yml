name: Rust CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config libssl-dev libfontconfig1-dev libfreetype6-dev


      - name: Build
        run: cargo build --release

      - name: Run tests
        run: cargo test --release

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: micommunity-linux
          path: target/release/micommunity

  build-windows:
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v4

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Set up MSVC environment
        shell: cmd
        run: '"C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64 && cargo build --release'


      - name: Build
        run: cargo build --release

      - name: Run tests
        run: cargo test --release

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: micommunity-windows
          path: target/release/micommunity.exe

  release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest

    steps:
      - name: Download Linux binary
        uses: actions/download-artifact@v4
        with:
          name: micommunity-linux
          path: artifacts/

      - name: Download Windows binary
        uses: actions/download-artifact@v4
        with:
          name: micommunity-windows
          path: artifacts/

      - name: Publish GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag="v${{ github.run_number }}"
          gh release create "$tag" artifacts/micommunity artifacts/micommunity.exe --title "Release $tag" --notes "Automated build for Linux and Windows"
